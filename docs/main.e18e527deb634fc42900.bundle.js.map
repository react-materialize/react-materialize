{"version":3,"file":"main.e18e527deb634fc42900.bundle.js","sources":["webpack:///./src/Checkbox.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport idgen from './idgen';\n\nclass Checkbox extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { indeterminate } = this.props;\n\n    if (this._input && indeterminate) {\n      this._input.indeterminate = indeterminate;\n      this._input.checked = false;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.indeterminate !== this.props.indeterminate) {\n      this._input.indeterminate = this.props.indeterminate;\n    }\n  }\n\n  render() {\n    const {\n      id,\n      className,\n      indeterminate,\n      filledIn,\n      disabled,\n      onChange,\n      checked,\n      value,\n      label\n    } = this.props;\n\n    let computedId = id || idgen();\n\n    if (indeterminate) {\n      computedId = `indeterminate-checkbox-${idgen()}`;\n    }\n\n    return (\n      <label htmlFor={computedId}>\n        <input\n          id={computedId}\n          className={cx(\n            {\n              'filled-in': filledIn\n            },\n            className\n          )}\n          disabled={disabled}\n          onChange={onChange}\n          type=\"checkbox\"\n          defaultChecked={checked}\n          value={value}\n          ref={input => (this._input = input)}\n        />\n        <span>{label}</span>\n      </label>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  className: PropTypes.string,\n  /*\n   * checkbox value\n   */\n  value: PropTypes.string.isRequired,\n  /*\n   * filled-in styled checkbox\n   */\n  filledIn: PropTypes.bool,\n  /*\n   * label next to checkbox\n   */\n  label: PropTypes.string.isRequired,\n  /*\n   * Indeterminate Style\n   */\n  indeterminate: PropTypes.bool,\n  /*\n   * onChange callback\n   */\n  onChange: PropTypes.func,\n  /*\n   * override id\n   * @default idgen()\n   */\n  id: PropTypes.string,\n  /*\n   * disabled input\n   */\n  disabled: PropTypes.bool,\n  /*\n   * A Boolean attribute indicating whether or not this checkbox is checked\n   */\n  checked: PropTypes.bool\n};\n\nexport default Checkbox;\n"],"mappings":"AAKA","sourceRoot":""}